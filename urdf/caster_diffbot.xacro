<?xml version="1.0"?>
<robot name="caster_diffbot" xmlns:xacro="http://ros.org/wiki/xacro"> 
  
  <xacro:property name="package_name" value="ign_robots_examples"/>
  <xacro:property name="PI" value="3.14159265"/>
  
  <xacro:property name="wheelSeparation" value="0.13"/>
  <xacro:property name="wheelDiameter" value="0.07"/>
  <xacro:property name="wheelThickness" value="0.024"/>
  <xacro:property name="base_elevation" value="0.01"/>

  <xacro:arg name="base_color"    default="1.0 0.0 0.0 1.0"/>
  
  <!-- Custom color (for Ign and RViz) -->
  <material name="gray">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  
  
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${base_elevation}" rpy="0 0 0"/>
  </joint>

  <link name="base_link">
    <visual>
      <origin xyz="-0.033 0.0 0.04" rpy="0 0 ${PI}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/base_plate.stl" scale="1 1 1"/>
      </geometry>
      <material name="base_color"> <!-- Color in IGN and Rviz2 (inside visual tag) -->
        <color rgba="$(arg base_color)"/>
      </material>
    </visual>
    <collision>
      <origin xyz="-0.033 0 0.04" rpy="0 0 0"/>
      <geometry>
        <box size="0.2 0.1 0.01"/>
      </geometry>
    </collision>
    <!-- Collision tag added to stabilize the robot -->
    <collision> 
      <origin xyz="0.06 0 0.002" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.01" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 ${wheelDiameter-base_elevation}" rpy="0 0 0"/>
      <mass value="10"/>
      <inertia ixx="0.333333" ixy="0.0" ixz="0.0"  iyy="0.333333" iyz="0.0"  izz="0.6" />
    </inertial>
  </link>


  <!-- Wheels definition (joints and links) -->
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
    <origin xyz="0 ${wheelSeparation/2} ${wheelDiameter/2-base_elevation}" rpy="${-PI/2} 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="10" velocity="10"/>
  </joint>

  <link name="wheel_left_link">
    <visual>
      <origin xyz="0 0 0.015" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/wheel_ring.stl" scale="1 1 1"/>
      </geometry>
      <material name="gray"/> <!-- Color in Rviz2 (inside visual tag) -->
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${wheelThickness}" radius="${wheelDiameter/2}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="5" />
      <inertia ixx="0.0135417" ixy="0.0" ixz="0.0"  iyy="0.0135417" iyz="0.0"  izz="0.025" />
      </inertial>
  </link>

  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
    <origin xyz="0 ${-wheelSeparation/2} ${wheelDiameter/2-base_elevation}" rpy="${-PI/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="wheel_right_link">
    <visual>
      <origin xyz="0 0 -0.015" rpy="${PI} 0 0"/> <!-- -z and r=PI for the other wheel -->
      <geometry>
        <mesh filename="package://${package_name}/meshes/wheel_ring.stl" scale="1 1 1"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${wheelThickness}" radius="${wheelDiameter/2}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="5" />
      <inertia ixx="0.0135417" ixy="0.0" ixz="0.0"  iyy="0.0135417" iyz="0.0"  izz="0.025" />
    </inertial>
  </link>

  <!-- Caster wheel definition (joints and links) -->
  <joint name="caster_base_joint" type="continuous">
    <origin xyz="-0.104 0 0.015" rpy="0 0 ${PI}" />
    <parent link="base_link" />
    <child link="caster_base_link" />
    <axis xyz="0 0 1" />
  </joint>
  
  <link name="caster_base_link">
    <visual>
      <origin xyz="0 0 0.015" rpy="${-PI} 0 0" />
      <geometry>
        <mesh filename="package://${package_name}/meshes/base_caster.stl" />
      </geometry>
      <material name="base_color"/>
    </visual>
    <inertial> <!-- inertia tag must be set for this link -->
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="0.5" />
      <inertia ixx="0.00004" ixy="0" ixz="0" iyy="0.00004" iyz="0" izz="0.00001" />
    </inertial>
  </link>

  <joint name="caster_wheel_joint" type="continuous">
    <origin xyz="0.015014 -0.00012272 -0.01" rpy="0 ${-PI/2} ${PI/2}" />
    <parent link="caster_base_link" />
    <child link="caster_wheel_link" />
    <axis xyz="0 0 1" />
  </joint>
  
  <link name="caster_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://${package_name}/meshes/caster_wheel.stl" />
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.01" radius="0.015" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="6.93889390390723E-18 -2.62037475051713E-11 -2.77710070911708E-09" rpy="0 0 0" />
      <mass value="0.08" />
      <inertia ixx="0.0004" ixy="0" ixz="0" iyy="0.0004" iyz="0" izz="0.00001" />
    </inertial>
  </link>


  <gazebo>
    <plugin
      filename="ignition-gazebo-diff-drive-system"
      name="ignition::gazebo::systems::DiffDrive">
      <!-- By default, cmd_vel and odometry topics are used-->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <wheel_separation>${wheelSeparation}</wheel_separation>
      <wheel_radius>${wheelDiameter/2}</wheel_radius>
      <odom_publish_frequency>20</odom_publish_frequency>
      <max_linear_acceleration>0.5</max_linear_acceleration>
      <min_linear_acceleration>-0.5</min_linear_acceleration>
      <max_angular_acceleration>1</max_angular_acceleration>
      <min_angular_acceleration>-1</min_angular_acceleration>
      <max_linear_velocity>0.5</max_linear_velocity>
      <min_linear_velocity>-0.3</min_linear_velocity>
      <max_angular_velocity>1</max_angular_velocity>
      <min_angular_velocity>-1</min_angular_velocity>
    </plugin>

    <plugin
      filename="gz-sim-joint-state-publisher-system"
      name="gz::sim::systems::JointStatePublisher">
    </plugin>

  </gazebo>

</robot>
